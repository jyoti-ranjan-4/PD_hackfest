quarkus.log.level=${LOG_LEVEL\:INFO}
%dev.quarkus.log.category."io.qiot.manufacturing".level=DEBUG
%dev.quarkus.log.console.color=true

%prod.quarkus.http.port=${HTTP_PORT\:8080}
%dev.quarkus.http.port=5200
quarkus.resteasy.path=/v1

#quarkus.smallrye-openapi.path=/v1/swagger
quarkus.swagger-ui.always-include=true
#quarkus.swagger-ui.path=/v1/swaggerui

#for hibernate-spatial extension. see https://github.com/quarkusio/quarkus/issues/6615
#quarkus.native.additional-build-args =-H:ReflectionConfigurationFiles=reflection-config.json

#bacause of https://github.com/graalvm/mandrel/pull/174
quarkus.native.additional-build-args=--trace-object-instantiation\=java.awt.color.ICC_ColorSpace,--initialize-at-run-time\=javax.imageio.ImageTypeSpecifier\\,com.sun.imageio.plugins.jpeg.JPEG\\$JCS

#datasource config POSTGRESQL
quarkus.datasource.db-kind=postgresql
quarkus.datasource.username=qiotmanufacturing
quarkus.datasource.password=qiotmanufacturingpassword
quarkus.datasource.jdbc.url=jdbc:postgresql://${DBHOST\:localhost}:5433/qiot_manufacturing

%dev.quarkus.hibernate-orm.database.generation=drop-and-create
%dev.quarkus.liquibase.migrate-at-start=false
quarkus.liquibase.migrate-at-start=true

%dev.quarkus.hibernate-orm.log.sql=true
%staging.quarkus.hibernate-orm.log.sql=true

%dev.quarkus.hibernate-orm.log.bind-parameters=true
%staging.quarkus.hibernate-orm.log.bind-parameters=true

# Rest client configuration properties
# using "configKey" instead of interface fully qualified name
### PRODUCT LINE
registration-service-api/mp-rest/url=${DATACENTER_REGISTRATION_SERVICE_URL:http://localhost:5202} 
registration-service-api/mp-rest/scope=javax.inject.Singleton
